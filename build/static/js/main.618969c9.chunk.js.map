{"version":3,"sources":["components/FontAwesome/index.js","components/Thumbnail/index.js","pages/Portfolio.js","pages/About.js","pages/Contact.js","components/Navbar/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faUser","faEnvelope","faLock","Thumbnail","props","className","title","href","link","src","image","alt","console","log","Portfolio","projectData","map","a","onClick","About","Contact","id","method","htmlFor","type","aria-describedby","rows","Navbar","useState","active","setActive","to","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2sCAIAA,IAAQC,IAAIC,IAAQC,IAAYC,K,YCejBC,MAff,SAAmBC,GACf,OACQ,yBAAKC,UAAU,gCACrB,yBAAKA,UAAU,6BACL,yBAAKA,UAAU,iBAAiBD,EAAME,OAC1C,uBAAGC,KAAMH,EAAMI,MACX,yBAAKH,UAAU,iBACX,yBAAKI,IAAKL,EAAMM,MAAOC,IAAI,cAGlCC,QAAQC,IAAIT,EAAMI,S,QCYhBM,MAnBf,WACE,OACE,oCACA,yBAAKT,UAAU,aACb,yBAAKA,UAAU,YACZU,EAAYC,KAAI,SAAAC,GAAC,OAAG,yBAAKZ,UAAU,sBAChC,kBAAC,EAAD,CACEG,KAAMS,EAAET,KACRE,MAAOO,EAAEP,MACTJ,MAAOW,EAAEX,MACTY,QAASD,EAAET,eCLVW,MAVf,WACI,OACI,yBAAKd,UAAU,aACX,4GAC8E,+CAD9E,yTCqBKe,MAxBjB,WACI,OAEI,yBAAKf,UAAU,aACd,0BAAMgB,GAAG,eAAeC,OAAO,QACpC,yBAAKjB,UAAU,cACX,2BAAOkB,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOnB,UAAU,kBAEjC,yBAAKA,UAAU,cACX,2BAAOkB,QAAQ,sBAAf,iBACA,2BAAOC,KAAK,QAAQnB,UAAU,eAAeoB,mBAAiB,eAElE,yBAAKpB,UAAU,cACX,2BAAOkB,QAAQ,WAAf,WACA,8BAAUlB,UAAU,eAAeqB,KAAK,OAE5C,4BAAQF,KAAK,SAASnB,UAAU,mBAAhC,a,cCwBWsB,MAvCf,WAAmB,IAAD,EACYC,mBAAS,GADrB,mBACTC,EADS,KACDC,EADC,KAEhB,OACE,yBAAKzB,UAAU,8EACf,yBAAKA,UAAU,OAAOI,IAAI,sBAAsBE,IAAI,SAClD,wBAAIN,UAAU,cACZ,wBAAIA,UAAU,YAEZ,kBAAC,IAAD,CACE0B,GAAG,IACHb,QAAS,kBAAMY,EAAU,IACzBzB,UAAsB,IAAXwB,EAAe,mBAAqB,YAHjD,SAQF,wBAAIxB,UAAU,YACZ,kBAAC,IAAD,CACE0B,GAAG,SACHb,QAAS,kBAAMY,EAAU,IACzBzB,UAAsB,IAAXwB,EAAe,mBAAqB,YAHjD,UAQF,wBAAIxB,UAAU,YACZ,kBAAC,IAAD,CACE0B,GAAG,WACHb,QAAS,kBAAMY,EAAU,IACzBzB,UAAsB,IAAXwB,EAAe,mBAAqB,YAHjD,eCRKG,MAjBf,WACQ,OAGM,yBAAK3B,UAAU,qCACb,yBAAKA,UAAU,wBAEb,uBAAGE,KAAK,6BAAR,UAFF,IAGE,uBAAGA,KAAK,8CAAR,YAHF,IAIE,uBAAGA,KAAK,yCAAR,aACA,yBAAKE,IAAI,gCCqBZwB,MAjBf,WACE,OAEE,kBAAC,IAAD,KACA,6BACE,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,aAAaC,UAAWtB,IAC1C,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAASC,UAAWjB,IACtC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,WAAWC,UAAWhB,KAE5C,kBAAC,EAAD,QClBgBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1C,QAAQ0C,MAAMA,EAAMC,c","file":"static/js/main.618969c9.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { faUser, faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faUser, faEnvelope, faLock)","import React from \"react\";\n// import { Link } from 'react-router-dom';\nimport \"./style.css\";\n\nfunction Thumbnail(props) {\n    return (\n            <div className=\"card mb-3 align-items-center\">\n      <div className=\"card-body hvr-outline-out\">\n                <div className=\"project-title\">{props.title}</div>\n            <a href={props.link}>\n                <div className=\"project-image\">\n                    <img src={props.image} alt=\"Project\"/>\n                </div>\n            </a>\n            {console.log(props.link)}\n        </div></div>\n    )\n    \n}\nexport default Thumbnail;\n\n","// portfolio page\nimport React from \"react\";\nimport Thumbnail from \"../components/Thumbnail\";\nimport \"../App.css\";\nimport projectData from \"../utils/projects.json\"\n\n// import hero, nav, footer etc.\nfunction Portfolio() {\n  return (\n    <>\n    <div className='container'>\n      <div className=\"row mt-4\">\n        {projectData.map(a=> <div className=\"col-md-3 mt-3 mb-3\">\n            <Thumbnail\n              link={a.link}\n              image={a.image}\n              title={a.title}\n              onClick={a.link}\n            />\n        </div>)}\n          </div> \n          </div>\n    </>\n  );\n}\n\nexport default Portfolio;\n","import React from 'react';\n\nfunction About() {\n    return (\n        <div className=\"container\">\n            <p>\n            sydney krantz is: she/her, an image maker, artist, problem-solver, founder of <b>creative species</b>, and currently studying to be a full-stack developer. she hails from northern nj, and resides in los angeles, where she somehow survives daily life despite her avocado allergy. she graduated massachusetts college of art + design with a bfa in photography and will be a dope front-end developer soon enough. \n            </p>\n        </div>\n    )\n}\n\nexport default About;","import React from \"react\";\n// import hero, nav, footer etc. \nfunction Contact() {\n    return (\n      \n        <div className=\"container\">\n         <form id=\"contact-form\" method=\"POST\">\n    <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" className=\"form-control\" />\n    </div>\n    <div className=\"form-group\">\n        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" />\n    </div>\n    <div className=\"form-group\">\n        <label htmlFor=\"message\">Message</label>\n        <textarea className=\"form-control\" rows=\"5\"></textarea>\n    </div>\n    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n</form>\n        </div>\n      \n    );\n  }\n  \n  export default Contact;","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Navbar() {\n  const [active, setActive] = useState(1);\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light sticky-top align-items-right\"> \n    <img className=\"logo\" src=\"./assets/logo_2.png\" alt=\"logo\" />\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n         \n          <NavLink\n            to=\"/\"\n            onClick={() => setActive(1)}\n            className={active === 1 ? \"nav-link active1\" : \"nav-link\"}\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink\n            to=\"/about\"\n            onClick={() => setActive(2)}\n            className={active === 2 ? \"nav-link active1\" : \"nav-link\"}\n          >\n            About\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink\n            to=\"/contact\"\n            onClick={() => setActive(3)}\n            className={active === 3 ? \"nav-link active1\" : \"nav-link\"}\n          >\n            Contact\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { a } from \"react-router-dom\";\n\n// import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction Footer() {\n        return (\n\n\n              <div className=\"footer row justify-content-center\">\n                <div className=\"col-md-5 text-center\">\n                    \n                  <a href=\"https://github.com/syd107\">GitHub</a>| \n                  <a href=\"https://www.linkedin.com/in/sydney-krantz/\">LinkedIn</a>| \n                  <a href=\"https://www.instagram.com/seeeyudddd/\">Instagram</a>\n                  <img src=\"./public/assets/logo.png\"/>\n                </div>\n              </div>\n           \n          );\n        }\n\nexport default Footer;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./components/FontAwesome\"\nimport './App.css';\nimport Portfolio from \"./pages/Portfolio\"\nimport About from \"./pages/About\"\nimport Contact from \"./pages/Contact\"\nimport Navbar from \"./components/Navbar\"\nimport Footer from \"./components/footer\";\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons'\n// import { instagram, twitter } from '@fortawesome/free-solid-svg-icons'\n\n// library.add(fab, instagram, twitter)\n\n\n\n// routes go here and import whatever elements i want to use for the whole site\n\nfunction App() {\n  return (\n  \n    <Router>\n    <div>\n      <Navbar />\n        <Route exact path=\"/\" component={Portfolio} />\n        <Route exact path=\"/Portfolio\" component={Portfolio} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/contact\" component={Contact} />\n        </div>\n    <Footer/>\n    </Router> \n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}